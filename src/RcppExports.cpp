// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// calcRateC
NumericMatrix calcRateC(NumericMatrix Mtilde, NumericMatrix Aj, NumericVector days, NumericMatrix searches);
RcppExport SEXP _tsplit_calcRateC(SEXP MtildeSEXP, SEXP AjSEXP, SEXP daysSEXP, SEXP searchesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type Mtilde(MtildeSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Aj(AjSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type days(daysSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type searches(searchesSEXP);
    rcpp_result_gen = Rcpp::wrap(calcRateC(Mtilde, Aj, days, searches));
    return rcpp_result_gen;
END_RCPP
}
// calcTsplitC
NumericMatrix calcTsplitC(NumericMatrix rate, NumericVector days, NumericVector times);
RcppExport SEXP _tsplit_calcTsplitC(SEXP rateSEXP, SEXP daysSEXP, SEXP timesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type rate(rateSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type days(daysSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type times(timesSEXP);
    rcpp_result_gen = Rcpp::wrap(calcTsplitC(rate, days, times));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_tsplit_calcRateC", (DL_FUNC) &_tsplit_calcRateC, 4},
    {"_tsplit_calcTsplitC", (DL_FUNC) &_tsplit_calcTsplitC, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_tsplit(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
